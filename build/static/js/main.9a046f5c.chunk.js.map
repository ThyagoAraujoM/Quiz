{"version":3,"sources":["context/QuestionsContext.tsx","styles/geral.tsx","pages/Resultado/styles.tsx","pages/Home/styles.tsx","pages/Home/index.tsx","pages/Perguntas/styles.tsx","pages/Perguntas/index.tsx","hooks/useQuestions.ts","pages/Resultado/index.tsx","App.tsx","styles/theme/default.tsx","index.tsx"],"names":["QuestionsContext","createContext","QuestionsContextProvider","props","axios","require","useState","questions","setQuestions","correctQuestionAndAnswer","setCorrectQuestionAndAnswer","quantity","a","get","prop","newQuestions","correctQuestionAndAnswerValue","data","results","questionAndAnswer","question","answer","correct_answer","push","Provider","value","getQuestions","children","ContextContainer","styled","HeaderStyled","ReturnButton","Button","theme","palette","primary","main","ScoreContainer","ButtonContainer","secondary","QuestionsBox","QuestionBox","AnswersGrid","Answer","CorrectAnswer","WrongAnswer","StyledMenuItem","MenuItem","Main","StyledButton","QuestionsContainer","QuestionContainer","BoxStyle","Box","ModalButton","ShowSelectedQuizButton","Home","React","openModal","setOpenModal","showSelectedQuiz","setShowSelectedQuiz","quantityOfQuestions","setQuantityOfQuestions","storageQuizSelected","setStorageQuizSelected","correct","wrong","numberOfWorngAndCorrects","setNumberOfWorngAndCorrects","showButtonOfSelectedQuiz","setShowButtonOfSelectedQuiz","listOfDatesOfQuizzes","localStorage","getItem","JSON","parse","QuestionsValueSchema","Yup","shape","perguntas","min","max","required","handleClose","undefined","Select","displayEmpty","renderValue","length","className","list","onClick","quizSelected","quizStorage","componentQuizSelected","user_answer","sx","border","selectQuiz","renderListOfQuizzes","initialValues","validationSchema","onSubmit","errors","touched","name","type","Modal","hideBackdrop","open","onClose","id","to","EndQuizButton","Error","Perguntas","useContext","userAnswers","redirect","setRedirect","error","setError","params","useParams","createMultipleQuestions","index","document","querySelector","classList","add","remove","incorrect_answers","map","key","i","sort","b","Math","random","createBooleanQuestions","useEffect","x","category","difficulty","transformQuestions","setItem","stringify","console","log","processRedirect","Resultado","show","setShow","result","currentQuiz","setCurrentQuiz","storageCurrentQuiz","corrects","wrongs","renderCorrectAndWorkQuestions","variant","date","Date","ActualDate","getDate","getMonth","getFullYear","find","saveCurrentQuiz","showResult","App","createTheme","text","ThemeProvider","path","component","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a046f5c.chunk.js","sourcesContent":["import React, { createContext, ReactNode, useState } from \"react\";\r\n\r\ntype Questions = {\r\n  category: string;\r\n  type: string;\r\n  difficulty: string;\r\n  question: string;\r\n  correct_answer: string;\r\n  incorrect_answer: [string];\r\n};\r\n\r\ntype CorrectQuestionAndAnswer = {\r\n  question: string;\r\n  answer: string;\r\n};\r\n\r\ntype QuestionsContextType = {\r\n  questions: Questions[];\r\n  correctQuestionAndAnswer: CorrectQuestionAndAnswer[];\r\n  getQuestions: (quantity: string) => void;\r\n};\r\n\r\ntype QuestionsContextProviderProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const QuestionsContext = createContext({} as QuestionsContextType);\r\n\r\nexport function QuestionsContextProvider(props: QuestionsContextProviderProps) {\r\n  const axios = require(\"axios\");\r\n  const [questions, setQuestions] = useState<Questions[]>([]);\r\n  const [correctQuestionAndAnswer, setCorrectQuestionAndAnswer] = useState<\r\n    CorrectQuestionAndAnswer[]\r\n  >([]);\r\n\r\n  async function getQuestions(quantity: string) {\r\n    const newQuestions = await axios.get(\r\n      `https://opentdb.com/api.php?amount=${quantity}`\r\n    );\r\n\r\n    let correctQuestionAndAnswerValue = [];\r\n\r\n    for (let prop in newQuestions.data.results) {\r\n      let questionAndAnswer = {\r\n        question: newQuestions.data.results[prop].question,\r\n        answer: newQuestions.data.results[prop].correct_answer,\r\n      };\r\n      correctQuestionAndAnswerValue.push(questionAndAnswer);\r\n    }\r\n    setCorrectQuestionAndAnswer(correctQuestionAndAnswerValue);\r\n    setQuestions(newQuestions.data.results);\r\n  }\r\n\r\n  return (\r\n    <QuestionsContext.Provider\r\n      value={{\r\n        questions,\r\n        correctQuestionAndAnswer,\r\n        getQuestions,\r\n      }}>\r\n      {props.children}\r\n    </QuestionsContext.Provider>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { styled } from \"@material-ui/system\";\r\n\r\nexport const ContextContainer = styled(\"div\")`\r\n  min-height: 100vh;\r\n  background: #ccf1ec;\r\n`;\r\n\r\nexport const HeaderStyled = styled(\"div\")`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 20px;\r\n  h1 {\r\n    margin: 0 auto;\r\n    transform: translate(-25%, 0);\r\n  }\r\n`;\r\n\r\nexport const ReturnButton = styled(Button)`\r\n  background: ${(props) => props.theme.palette.primary.main};\r\n  border: 1px solid ${(props) => props.theme.palette.primary.main};\r\n  .c-link {\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n  &:hover {\r\n    .c-link {\r\n      color: ${(props) => props.theme.palette.primary.main};\r\n    }\r\n    background: #fff;\r\n  }\r\n`;\r\n","import { styled } from \"@material-ui/system\";\r\n\r\nexport const ScoreContainer = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 200px;\r\n  gap: 100px;\r\n\r\n  .c-score {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    border-radius: 0.25em;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    min-width: 60px;\r\n    h3 {\r\n      margin: 0;\r\n      color: #13ca41;\r\n    }\r\n    h4 {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  .c-score.c-correct {\r\n    background: #13ca413b;\r\n    h3 {\r\n      color: #13ca41;\r\n    }\r\n  }\r\n\r\n  .c-score.c-wrong {\r\n    background: #ca13224e;\r\n    h3 {\r\n      color: #ca1322;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 100px;\r\n  margin: 0 0 20px 0;\r\n\r\n  Button {\r\n    background: ${(props) => props.theme.palette.secondary.main};\r\n    border: 1px solid ${(props) => props.theme.palette.secondary.main};\r\n    &:hover {\r\n      color: ${(props) => props.theme.palette.secondary.main};\r\n      background: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QuestionsBox = styled(\"div\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  width: 900px;\r\n  margin: 0 auto 0 auto;\r\n  padding: 0 0 40px 0;\r\n`;\r\n\r\nexport const QuestionBox = styled(\"div\")`\r\n  width: 100%;\r\n  padding: 20px;\r\n  background: ${(props) => props.theme.palette.primary.main};\r\n  color: #fff;\r\n\r\n  &.c-wrong-answer {\r\n    border: solid 5px #ca13224e;\r\n  }\r\n\r\n  &.c-correct-answer {\r\n    border: solid 5px #13ca414e;\r\n  }\r\n`;\r\n\r\nexport const AnswersGrid = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: #fff;\r\n`;\r\n\r\nexport const Answer = styled(\"p\")`\r\n  text-align: center;\r\n  padding: 10px;\r\n  border-radius: 0.5em;\r\n`;\r\n\r\nexport const CorrectAnswer = styled(Answer)`\r\n  background: #13ca41a6;\r\n`;\r\n\r\nexport const WrongAnswer = styled(Answer)`\r\n  background: #ca1322b5;\r\n`;\r\n","import { Button, MenuItem } from \"@material-ui/core\";\r\nimport { styled } from \"@material-ui/system\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport const HeaderStyled = styled(\"header\")`\r\n  padding: 0 20px;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  .c-header-select {\r\n    background: ${(props) => props.theme.palette.primary.main};\r\n    width: 220px;\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nexport const StyledMenuItem = styled(MenuItem)`\r\n  height: 30px;\r\n  p {\r\n    color: ${(props) => props.theme.palette.primary.main};\r\n  }\r\n`;\r\n\r\nexport const Main = styled(\"main\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    margin: 100px 0 50px 0;\r\n    font-size: 28px;\r\n    text-align: center;\r\n  }\r\n  .c-form {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n    position: relative;\r\n\r\n    .c-text-Input {\r\n      background: #544e61;\r\n      width: 150px;\r\n      height: 36px;\r\n      border: none;\r\n      border-radius: 0.5em;\r\n    }\r\n\r\n    .c-error {\r\n      position: absolute;\r\n      bottom: -25px;\r\n      left: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  background: ${(props) => props.theme.palette.primary.main};\r\n  color: #fff;\r\n  border: 1px ${(props) => props.theme.palette.primary.main} solid;\r\n  &:hover {\r\n    background: #fff;\r\n    color: ${(props) => props.theme.palette.primary.main};\r\n  }\r\n`;\r\n\r\nexport const QuestionsContainer = styled(\"div\")`\r\n  margin-top: 0px;\r\n  background: ${(props) => props.theme.palette.primary.main};\r\n`;\r\n\r\nexport const QuestionContainer = styled(\"div\")`\r\n  padding: 20px;\r\n  border: solid 1px #fff;\r\n  color: #fff;\r\n`;\r\n\r\nexport const BoxStyle = styled(Box)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 400px;\r\n  background-color: ${(props) => props.theme.palette.primary.main};\r\n  border: 2px solid #0808085e;\r\n  padding: 15px;\r\n  color: #fff;\r\n\r\n  .c-buttons-modal {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const ModalButton = styled(StyledButton)`\r\n  background: #fff;\r\n  color: ${(props) => props.theme.palette.primary.main};\r\n  border: 1px ${(props) => props.theme.palette.primary.main} solid;\r\n\r\n  &:hover {\r\n    background: ${(props) => props.theme.palette.primary.main};\r\n    color: #fff;\r\n    border: 1px #fff solid;\r\n  }\r\n\r\n  .c-link {\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.palette.primary.main};\r\n\r\n    &:hover {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ShowSelectedQuizButton = styled(Button)`\r\n  margin-top: 40px;\r\n  background: ${(props) => props.theme.palette.primary.main};\r\n  color: #fff;\r\n  border: 1px solid ${(props) => props.theme.palette.primary.main};\r\n  &:hover {\r\n    color: ${(props) => props.theme.palette.primary.main};\r\n    background: #fff;\r\n  }\r\n`;\r\n","import { Modal, Select } from \"@material-ui/core\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { ContextContainer } from \"../../styles/geral\";\r\nimport {\r\n  AnswersGrid,\r\n  CorrectAnswer,\r\n  ScoreContainer,\r\n  WrongAnswer,\r\n} from \"../Resultado/styles\";\r\nimport {\r\n  HeaderStyled,\r\n  BoxStyle,\r\n  Main,\r\n  QuestionsContainer,\r\n  QuestionContainer,\r\n  StyledMenuItem,\r\n  StyledButton,\r\n  ModalButton,\r\n  ShowSelectedQuizButton,\r\n} from \"./styles\";\r\n\r\nexport default function Home() {\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [showSelectedQuiz, setShowSelectedQuiz] = useState(false);\r\n  const [quantityOfQuestions, setQuantityOfQuestions] = useState(\"\");\r\n  const [storageQuizSelected, setStorageQuizSelected] = useState<any[]>([]);\r\n  const [numberOfWorngAndCorrects, setNumberOfWorngAndCorrects] = useState<{\r\n    correct: number;\r\n    wrong: number;\r\n  }>({ correct: 0, wrong: 0 });\r\n\r\n  const [showButtonOfSelectedQuiz, setShowButtonOfSelectedQuiz] =\r\n    useState(false);\r\n\r\n  let listOfDatesOfQuizzes: [] | any =\r\n    localStorage.getItem(\"listOfDatesOfQuizzes\") != null\r\n      ? localStorage.getItem(\"listOfDatesOfQuizzes\")\r\n      : [];\r\n  if (listOfDatesOfQuizzes[0] != null) {\r\n    listOfDatesOfQuizzes = JSON.parse(listOfDatesOfQuizzes);\r\n  }\r\n\r\n  function renderListOfQuizzes() {\r\n    let list = [];\r\n    for (let value in listOfDatesOfQuizzes) {\r\n      list.push(\r\n        <StyledMenuItem\r\n          key={value}\r\n          onClick={() => {\r\n            selectQuiz(listOfDatesOfQuizzes[value]);\r\n          }}>\r\n          <p>{listOfDatesOfQuizzes[value]}</p>\r\n        </StyledMenuItem>\r\n      );\r\n    }\r\n    return list;\r\n  }\r\n\r\n  function selectQuiz(quizSelected: string) {\r\n    let quizStorage: any = localStorage.getItem(quizSelected);\r\n    quizStorage = JSON.parse(quizStorage);\r\n    const componentQuizSelected: any[] = [];\r\n\r\n    let wrong = 0,\r\n      correct = 0;\r\n\r\n    for (let value in quizStorage) {\r\n      if (\r\n        quizStorage[value].correct_answer === quizStorage[value].user_answer\r\n      ) {\r\n        correct++;\r\n        componentQuizSelected.push(\r\n          <QuestionContainer key={value}>\r\n            <p>{quizStorage[value].question}</p>\r\n            <AnswersGrid>\r\n              <CorrectAnswer sx={{ border: \"1px solid #00000075\" }}>\r\n                {quizStorage[value].correct_answer}\r\n              </CorrectAnswer>\r\n            </AnswersGrid>\r\n          </QuestionContainer>\r\n        );\r\n      } else {\r\n        wrong++;\r\n        componentQuizSelected.push(\r\n          <QuestionContainer key={value}>\r\n            <p>{quizStorage[value].question}</p>\r\n            <AnswersGrid>\r\n              <CorrectAnswer>{quizStorage[value].correct_answer}</CorrectAnswer>\r\n              <WrongAnswer sx={{ border: \"1px solid #00000075\" }}>\r\n                {quizStorage[value].user_answer}\r\n              </WrongAnswer>\r\n            </AnswersGrid>\r\n          </QuestionContainer>\r\n        );\r\n      }\r\n    }\r\n    setNumberOfWorngAndCorrects({ correct, wrong });\r\n    setStorageQuizSelected(componentQuizSelected);\r\n    setShowButtonOfSelectedQuiz(true);\r\n  }\r\n\r\n  function renderSelectedQuiz() {\r\n    return (\r\n      <>\r\n        <ScoreContainer>\r\n          <div className='c-score c-correct'>\r\n            <h3>{numberOfWorngAndCorrects.correct}</h3>\r\n            <h4>Acertos</h4>\r\n          </div>\r\n          <div className='c-score c-wrong'>\r\n            <h3>{numberOfWorngAndCorrects.wrong}</h3>\r\n            <h4>Erros</h4>\r\n          </div>\r\n        </ScoreContainer>\r\n        <QuestionsContainer> {storageQuizSelected} </QuestionsContainer>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const QuestionsValueSchema = Yup.object().shape({\r\n    perguntas: Yup.number()\r\n      .min(1, \"Too Short\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n  });\r\n\r\n  const handleOpen = (value: any) => {\r\n    setQuantityOfQuestions(`${value.perguntas}`);\r\n    setOpenModal(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n  return (\r\n    <ContextContainer>\r\n      <HeaderStyled>\r\n        {listOfDatesOfQuizzes[0] !== undefined ? (\r\n          <Select\r\n            displayEmpty\r\n            renderValue={() => {\r\n              return <em>Completed quizzes: {listOfDatesOfQuizzes.length}</em>;\r\n            }}\r\n            className={\"c-header-select\"}>\r\n            {renderListOfQuizzes()}\r\n          </Select>\r\n        ) : null}\r\n      </HeaderStyled>\r\n      <Main>\r\n        <h2>\r\n          How about testing your knowledge? <br /> Get started now,\r\n          <br /> choose how many questions you want to ask{\" \"}\r\n        </h2>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            perguntas: \"\",\r\n          }}\r\n          validationSchema={QuestionsValueSchema}\r\n          onSubmit={handleOpen}>\r\n          {({ errors, touched }) => (\r\n            <Form className={\"c-form\"}>\r\n              <Field className='c-text-Input' name='perguntas' type='number' />\r\n              {errors.perguntas && touched.perguntas ? (\r\n                <div className={\"c-error\"}>{errors.perguntas}</div>\r\n              ) : null}\r\n\r\n              <StyledButton type='submit'>Start</StyledButton>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        {showButtonOfSelectedQuiz ? (\r\n          <ShowSelectedQuizButton\r\n            onClick={() => {\r\n              setShowSelectedQuiz(!showSelectedQuiz);\r\n            }}>\r\n            Show Quiz\r\n          </ShowSelectedQuizButton>\r\n        ) : null}\r\n\r\n        {showSelectedQuiz ? renderSelectedQuiz() : null}\r\n      </Main>\r\n      <Modal hideBackdrop open={openModal} onClose={handleClose}>\r\n        <BoxStyle>\r\n          <h2 id='child-modal-title'>Do you want to start ?</h2>\r\n          <p id='child-modal-description'>\r\n            Confirm to start questions, cancel to return.\r\n          </p>\r\n          <div className='c-buttons-modal'>\r\n            <ModalButton onClick={handleClose}>Close</ModalButton>\r\n            <ModalButton>\r\n              <Link\r\n                className={\"c-link\"}\r\n                to={`/perguntas/${quantityOfQuestions}`}>\r\n                Start\r\n              </Link>\r\n            </ModalButton>\r\n          </div>\r\n        </BoxStyle>\r\n      </Modal>\r\n    </ContextContainer>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { Box, styled } from \"@material-ui/system\";\r\n\r\nexport const QuestionsContainer = styled(\"div\")`\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  position: relative;\r\n`;\r\n\r\nexport const QuestionBox = styled(Box)`\r\n  background: ${(props) => props.theme.palette.primary.main};\r\n  padding: 10px 25px;\r\n  border-radius: 2em;\r\n  color: #fff;\r\n\r\n  .c-question-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 12px;\r\n  }\r\n  .c-answer-box {\r\n    text-align: center;\r\n    h4 {\r\n      margin: 10px 0 5px 0;\r\n    }\r\n    div {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n\r\n      justify-content: space-evenly;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Answer = styled(\"p\")`\r\n  border: 1px solid ${(props) => props.theme.palette.secondary.main};\r\n  padding: 5px 10px;\r\n  background: #fff;\r\n  color: ${(props) => props.theme.palette.secondary.main};\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n\r\n  &.selected {\r\n    background: ${(props) => props.theme.palette.secondary.main};\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const EndQuizButton = styled(Button)`\r\n  width: 100px;\r\n  margin: 0 auto 50px auto;\r\n  background: ${(props) => props.theme.palette.secondary.main};\r\n  border: solid 1px ${(props) => props.theme.palette.secondary.main};\r\n  color: #fff;\r\n  &:hover {\r\n    color: ${(props) => props.theme.palette.secondary.main};\r\n  }\r\n`;\r\n\r\nexport const Error = styled(\"p\")`\r\n  width: 200px;\r\n  background: #bd3e3eca;\r\n  padding: 10px;\r\n  text-align: center;\r\n  color: #fff;\r\n  margin: 0 auto;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { useQuestions } from \"../../hooks/useQuestions\";\r\nimport parse from \"html-react-parser\";\r\nimport {\r\n  ContextContainer,\r\n  HeaderStyled,\r\n  ReturnButton,\r\n} from \"../../styles/geral\";\r\nimport {\r\n  Answer,\r\n  EndQuizButton,\r\n  Error,\r\n  QuestionBox,\r\n  QuestionsContainer,\r\n} from \"./styles\";\r\n\r\ntype Question = {\r\n  incorrect_answers: [\"\"];\r\n  correct_answer: string;\r\n  difficulty: string;\r\n  question: string;\r\n  category: string;\r\n};\r\ntype UserAnswers = {\r\n  answer: string;\r\n};\r\n\r\ntype ParamsType = {\r\n  quantity: string;\r\n};\r\n\r\nexport default function Perguntas() {\r\n  const { questions, correctQuestionAndAnswer, getQuestions } = useQuestions();\r\n  const userAnswers: UserAnswers[] = [];\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  let params = useParams<ParamsType>();\r\n\r\n  useEffect(() => {\r\n    getQuestions(params.quantity);\r\n  }, []);\r\n\r\n  function transformQuestions(): any {\r\n    const x = [];\r\n    x.push(\r\n      questions.map((value: any, index: number) => {\r\n        return (\r\n          <QuestionBox key={index}>\r\n            <div className='c-question-header'>\r\n              <p>Category: {value.category}</p>\r\n              <p>Difficulty: {value.difficulty}</p>\r\n            </div>\r\n\r\n            <p>\r\n              Question: <br />\r\n              {parse(`${value.question}`)}\r\n            </p>\r\n\r\n            <div className='c-answer-box'>\r\n              <h4>Answers</h4>\r\n              <div>\r\n                {value.type === \"boolean\"\r\n                  ? createBooleanQuestions(value, index)\r\n                  : createMultipleQuestions(value, index)}\r\n              </div>\r\n            </div>\r\n          </QuestionBox>\r\n        );\r\n      })\r\n    );\r\n\r\n    return x;\r\n  }\r\n\r\n  function createMultipleQuestions(prop: Question, index: number) {\r\n    let answer = [];\r\n\r\n    answer.push(\r\n      <Answer\r\n        key={\"correct\"}\r\n        onClick={() => {\r\n          userAnswers[index] = {\r\n            answer: prop.correct_answer,\r\n          };\r\n          document\r\n            .querySelector(`.c-answer-0-${index}`)\r\n            ?.classList.add(\"selected\");\r\n\r\n          document\r\n            .querySelector(`.c-answer-1-${index}`)\r\n            ?.classList.remove(\"selected\");\r\n          document\r\n            .querySelector(`.c-answer-2-${index}`)\r\n            ?.classList.remove(\"selected\");\r\n          document\r\n            .querySelector(`.c-answer-3-${index}`)\r\n            ?.classList.remove(\"selected\");\r\n        }}\r\n        className={`c-answer-0-${index}`}>\r\n        {parse(prop.correct_answer)}\r\n      </Answer>\r\n    );\r\n\r\n    prop.incorrect_answers.map((value, key) => {\r\n      answer.push(\r\n        <Answer\r\n          key={key}\r\n          onClick={() => {\r\n            userAnswers[index] = {\r\n              answer: value,\r\n            };\r\n\r\n            for (let i = 0; i <= 3; i++) {\r\n              document\r\n                .querySelector(`.c-answer-${i}-${index}`)\r\n                ?.classList.remove(\"selected\");\r\n            }\r\n            document\r\n              .querySelector(`.c-answer-${key + 1}-${index}`)\r\n              ?.classList.add(\"selected\");\r\n          }}\r\n          className={`c-answer-${key + 1}-${index}`}>\r\n          {value}\r\n        </Answer>\r\n      );\r\n    });\r\n\r\n    answer.sort(function (a, b) {\r\n      return 0.5 - Math.random();\r\n    });\r\n\r\n    return answer;\r\n  }\r\n\r\n  function createBooleanQuestions(prop: Question, index: number) {\r\n    let answer = [];\r\n    answer.push(\r\n      <Answer\r\n        onClick={() => {\r\n          userAnswers[index] = {\r\n            answer: \"True\",\r\n          };\r\n          document\r\n            .querySelector(`.c-answer-true-${index}`)\r\n            ?.classList.add(\"selected\");\r\n          document\r\n            .querySelector(`.c-answer-false-${index}`)\r\n            ?.classList.remove(\"selected\");\r\n        }}\r\n        className={`c-answer-true-${index}`}>\r\n        True\r\n      </Answer>\r\n    );\r\n    answer.push(\r\n      <Answer\r\n        onClick={() => {\r\n          userAnswers[index] = {\r\n            answer: \"False\",\r\n          };\r\n          document\r\n            .querySelector(`.c-answer-true-${index}`)\r\n            ?.classList.remove(\"selected\");\r\n          document\r\n            .querySelector(`.c-answer-false-${index}`)\r\n            ?.classList.add(\"selected\");\r\n        }}\r\n        className={`c-answer-false-${index}`}>\r\n        False\r\n      </Answer>\r\n    );\r\n    return answer;\r\n  }\r\n\r\n  function processRedirect() {\r\n    let data = [];\r\n    try {\r\n      for (let value in correctQuestionAndAnswer) {\r\n        data.push({\r\n          question: correctQuestionAndAnswer[value].question,\r\n          correct_answer: correctQuestionAndAnswer[value].answer,\r\n          user_answer: userAnswers[value].answer,\r\n        });\r\n      }\r\n      localStorage.setItem(\"currentQuiz\", JSON.stringify(data));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setRedirect(true);\r\n    setError(false);\r\n  }\r\n\r\n  return (\r\n    <ContextContainer>\r\n      <HeaderStyled>\r\n        <ReturnButton>\r\n          <Link className={\"c-link\"} to='/'>\r\n            Return\r\n          </Link>\r\n        </ReturnButton>\r\n        <h1>Questions</h1>\r\n      </HeaderStyled>\r\n      <QuestionsContainer>\r\n        {questions ? transformQuestions() : null}\r\n        {error ? <Error>Fill in all data </Error> : null}\r\n        <EndQuizButton\r\n          onClick={() => {\r\n            if (correctQuestionAndAnswer.length === userAnswers.length) {\r\n              processRedirect();\r\n            } else {\r\n              setError(true);\r\n            }\r\n          }}>\r\n          Finish\r\n        </EndQuizButton>\r\n      </QuestionsContainer>\r\n      {redirect ? <Redirect push to='/resultado' /> : null}\r\n    </ContextContainer>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { QuestionsContext } from \"../context/QuestionsContext\";\r\n\r\nexport function useQuestions() {\r\n  const value = useContext(QuestionsContext);\r\n  return value;\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ContextContainer,\r\n  HeaderStyled,\r\n  ReturnButton,\r\n} from \"../../styles/geral\";\r\n\r\nimport {\r\n  AnswersGrid,\r\n  ButtonContainer,\r\n  CorrectAnswer,\r\n  QuestionBox,\r\n  QuestionsBox,\r\n  ScoreContainer,\r\n  WrongAnswer,\r\n} from \"./styles\";\r\n\r\nexport default function Resultado() {\r\n  const [show, setShow] = useState(false);\r\n  const result: JSX.Element[] = [];\r\n  const [currentQuiz, setCurrentQuiz] = useState<CurrentQuiz[]>([]);\r\n  type CurrentQuiz = {\r\n    question: string;\r\n    correct_answer: string;\r\n    user_answer: string;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let storageCurrentQuiz: any = localStorage.getItem(\"currentQuiz\");\r\n    setCurrentQuiz(JSON.parse(storageCurrentQuiz));\r\n  }, []);\r\n\r\n  function renderCorrectAndWorkQuestions() {\r\n    let corrects = 0;\r\n    let wrongs = 0;\r\n\r\n    for (let value in currentQuiz) {\r\n      if (\r\n        currentQuiz[value].correct_answer === currentQuiz[value].user_answer\r\n      ) {\r\n        corrects++;\r\n      } else {\r\n        wrongs++;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <ScoreContainer>\r\n        <div className='c-score c-correct'>\r\n          <h3>{corrects}</h3>\r\n          <h4>Correct</h4>\r\n        </div>\r\n        <div className='c-score c-wrong'>\r\n          <h3>{wrongs}</h3>\r\n          <h4>Wrong</h4>\r\n        </div>\r\n      </ScoreContainer>\r\n    );\r\n  }\r\n\r\n  function showResult() {\r\n    for (let value in currentQuiz) {\r\n      if (\r\n        currentQuiz[value].correct_answer === currentQuiz[value].user_answer\r\n      ) {\r\n        result.push(\r\n          <QuestionBox key={value} className={\"c-correct-answer\"}>\r\n            <p>{currentQuiz[value].question}</p>\r\n            <AnswersGrid>\r\n              <CorrectAnswer sx={{ border: \"2px solid #000000b5\" }}>\r\n                {currentQuiz[value].correct_answer}\r\n              </CorrectAnswer>\r\n            </AnswersGrid>\r\n          </QuestionBox>\r\n        );\r\n      } else {\r\n        result.push(\r\n          <QuestionBox key={value} className={\"c-wrong-answer\"}>\r\n            <p>{currentQuiz[value].question}</p>\r\n            <AnswersGrid>\r\n              <CorrectAnswer>{currentQuiz[value].correct_answer}</CorrectAnswer>\r\n              <WrongAnswer sx={{ border: \"2px solid #000000b5\" }}>\r\n                {currentQuiz[value].user_answer}\r\n              </WrongAnswer>\r\n            </AnswersGrid>\r\n          </QuestionBox>\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function saveCurrentQuiz() {\r\n    let data = currentQuiz;\r\n\r\n    let listOfDatesOfQuizzes: [] | any =\r\n      localStorage.getItem(\"listOfDatesOfQuizzes\") != null\r\n        ? localStorage.getItem(\"listOfDatesOfQuizzes\")\r\n        : [];\r\n\r\n    if (listOfDatesOfQuizzes[0] != null) {\r\n      listOfDatesOfQuizzes = JSON.parse(listOfDatesOfQuizzes);\r\n    }\r\n\r\n    let date = new Date();\r\n    let ActualDate = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\r\n\r\n    if (\r\n      listOfDatesOfQuizzes.find((value: string) => value === ActualDate) ===\r\n      undefined\r\n    ) {\r\n      listOfDatesOfQuizzes.push(ActualDate);\r\n    }\r\n    // salvado data de quando o quiz foi feito\r\n    localStorage.setItem(\r\n      \"listOfDatesOfQuizzes\",\r\n      JSON.stringify(listOfDatesOfQuizzes)\r\n    );\r\n    // salvando quiz com data que foi feito\r\n    localStorage.setItem(ActualDate, JSON.stringify(data));\r\n  }\r\n\r\n  return (\r\n    <ContextContainer>\r\n      <HeaderStyled>\r\n        <ReturnButton>\r\n          <Link className={\"c-link\"} to='/'>\r\n            Home\r\n          </Link>\r\n        </ReturnButton>\r\n        <h1>Result</h1>\r\n      </HeaderStyled>\r\n      <div>\r\n        {renderCorrectAndWorkQuestions()}\r\n        <ButtonContainer>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => {\r\n              setShow(!show);\r\n            }}>\r\n            Show Questions\r\n          </Button>\r\n          <Button\r\n            variant='contained'\r\n            onClick={() => {\r\n              saveCurrentQuiz();\r\n            }}>\r\n            Save Quiz\r\n          </Button>\r\n        </ButtonContainer>\r\n        <QuestionsBox>{show ? showResult() : null}</QuestionsBox>\r\n      </div>\r\n    </ContextContainer>\r\n  );\r\n}\r\n","import { ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { QuestionsContextProvider } from \"./context/QuestionsContext\";\nimport Home from \"./pages/Home\";\nimport Perguntas from \"./pages/Perguntas\";\nimport Resultado from \"./pages/Resultado\";\nimport defaultTheme from \"./styles/theme/default\";\n\nfunction App() {\n  const { theme } = defaultTheme();\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <QuestionsContextProvider>\n          <Route path='/' component={Home} exact />\n          <Route path='/perguntas/:quantity' component={Perguntas} />\n          <Route path='/resultado' component={Resultado} />\n        </QuestionsContextProvider>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { createTheme } from \"@material-ui/core\";\r\nimport { DefaultTheme } from \"@mui/private-theming\";\r\n\r\nexport default function defaultTheme() {\r\n  const theme: DefaultTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#544e61\",\r\n      },\r\n      secondary: {\r\n        main: \"#7F96FF\",\r\n      },\r\n      text: {\r\n        primary: \"#fff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return { theme };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}